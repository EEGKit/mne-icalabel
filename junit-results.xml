<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="1" time="1.464" timestamp="2021-12-21T13:38:09.147594" hostname="Adams-MacBook-Pro.local"><testcase classname="mne_icalabel.tests.tests_ica_features" name="test_topoplot_feature" time="0.446"><failure message="IndexError: index 32 is out of bounds for axis 0 with size 32">def test_topoplot_feature():
        """Test topoplot feature generation."""
        ica, raw = _create_test_ica_component()
    
        # get the ICA waveforms
        ica_weights = ica.mixing_matrix_
        ica_sphere = ica.pca_components_
    
        # compute the inputs for topoplot
        ica_winv = np.linalg.pinv(ica_weights.dot(ica_sphere))
        theta = np.arange(ica.n_components_)
        rho = np.arange(ica.n_components_)
    
        # topoplot_feature = topoplot(ica_winv, theta, rho)
        # test_topoplot_feature = eeg_topoplot(ica_winv, theta, rho)
        # assert_array_equal(topoplot_feature, test_topoplot_feature)
    
        # Test against Matlab's EEGLab test data
        icawinv = topoplot_data['icawinv']
        Rd = topoplot_data['Rd']
        Th = topoplot_data['Th']
        plotchans = topoplot_data['plotchans']
        expected_topo = topoplot_data['temp_topo']
    
        print(expected_topo.shape)
        print(Rd.shape, Th.shape)
        print(plotchans)
        print(icawinv.shape)
        # Python output
        i = 10
&gt;       Zi = eeg_topoplot(icawinv=icawinv[:, i:i + 1], Rd=Rd, Th=Th,
                          plotchans=plotchans)

Rd         = array([[0.50668889,        nan, 0.34459444, 0.25337778, 0.3445    ,
               nan, 0.40823333, 0.18118333, 0.1811...6667, 0.52233333,
        0.42112778, 0.37994444, 0.42112778, 0.52231111, 0.51498889,
        0.50668889, 0.51498889]])
Th         = array([[  -0.   ,      nan,  -39.947,   -0.   ,   39.897,      nan,
         -69.332,  -44.925,   44.925,   69.332,  -...,  140.103,  126.133,
        -144.108, -157.539,  180.   ,  157.539,  144.142, -162.074,
         180.   ,  162.074]])
expected_topo = array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., na...nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
i          = 10
ica        = &lt;ICA | raw data decomposition, method: fastica (fit in 30 iterations on 9010 samples), 19 ICA components explaining 100.0 % of variance (19 PCA components available), channel types: eeg, no sources marked for exclusion&gt;
ica_sphere = array([[ 2.30741893e-01,  1.90311495e-01,  1.69785968e-01,
         2.16665394e-01,  2.35509963e-01,  2.48226329e-01,
... 1.32780449e-01, -6.87255889e-02,
         7.42124760e-01, -3.00208353e-01,  6.94791533e-03,
        -6.63297629e-02]])
ica_weights = array([[ 2.93037872e+00,  1.81647890e+00, -1.39502622e+00,
        -9.44749695e-01,  7.85873373e-01, -8.22429541e-01,
...-1.69082083e-02, -1.64921982e-03,
         1.09364308e-03, -4.94911748e-03, -2.99848370e-02,
        -6.91594959e-03]])
ica_winv   = array([[ 2.67501328e-02, -4.10120698e-01,  5.19777911e-01,
         3.00563793e-01, -8.32738003e-01, -6.20726577e-01,
... 2.26839044e+00, -3.11073157e+00,
         1.35838366e+00, -2.21548927e+00, -3.77545732e+00,
         3.35523401e+00]])
icawinv    = array([[-1.65528009,  3.92257571, -0.5568863 , ..., -0.9927011 ,
         1.70654558, -0.01554507],
       [-2.1710363...272, -0.22446833],
       [ 0.03391154, -0.61792001,  0.3524727 , ...,  0.49965073,
        -0.25199903, -1.73869527]])
plotchans  = array([[ 1,  3,  4,  5,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]],
      dtype=uint8)
raw        = &lt;Raw | sample_audvis_filt-0-40_raw.fif, 20 x 9010 (60.0 s), ~4.3 MB, data loaded&gt;
rho        = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18])
theta      = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18])

mne_icalabel/tests/tests_ica_features.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

icawinv = array([[-1.24470228],
       [-0.21537367],
       [-1.83984471],
       [-1.55296582],
       [-0.73525021],
       [...739181],
       [ 0.54147206],
       [ 0.71285834],
       [ 0.06183836],
       [ 0.04424634],
       [ 0.28253896]])
Th = array([[-0.        ,         nan, -0.69720668, -0.        ,  0.69633401,
                nan, -1.21007168, -0.78408917....51515908,
        -2.74957425,  3.14159265,  2.74957425,  2.51575249, -2.82872493,
         3.14159265,  2.82872493]])
Rd = array([[0.50668889,        nan, 0.34459444, 0.25337778, 0.3445    ,
               nan, 0.40823333, 0.18118333, 0.1811...6667, 0.52233333,
        0.42112778, 0.37994444, 0.42112778, 0.52231111, 0.51498889,
        0.50668889, 0.51498889]])
plotchans = array([ 1,  3,  4,  5,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], dtype=uint8)

    def eeg_topoplot(icawinv: np.array, Th: np.array, Rd: np.array, plotchans: np.array) -&gt; np.array_equal:
        """
        Generates topoplot image for ICLabel
    
        Args:
            icawinv (np.array): pinv(EEG.icaweights*EEG.icasphere);
            Th (np.array): Theta coordinates of electrodes (polar)
            Rd (np.array): Rho coordinates of electrodes (polar)
            plotchans (np.array): plot channels
    
        Returns:
            np.array_equal: Heatmap values (32 x 32 image)
        """
        GRID_SCALE = 32
        RMAX = 0.5
    
        Th = Th * np.pi / 180
        allchansind = np.array(list(range(Th.shape[1])))
        intchans = np.array(list(range(30)))
        plotchans = np.squeeze(plotchans)
        x, y = pol2cart(Th, Rd)
&gt;       allchansind = allchansind[plotchans]
E       IndexError: index 32 is out of bounds for axis 0 with size 32

GRID_SCALE = 32
RMAX       = 0.5
Rd         = array([[0.50668889,        nan, 0.34459444, 0.25337778, 0.3445    ,
               nan, 0.40823333, 0.18118333, 0.1811...6667, 0.52233333,
        0.42112778, 0.37994444, 0.42112778, 0.52231111, 0.51498889,
        0.50668889, 0.51498889]])
Th         = array([[-0.        ,         nan, -0.69720668, -0.        ,  0.69633401,
                nan, -1.21007168, -0.78408917....51515908,
        -2.74957425,  3.14159265,  2.74957425,  2.51575249, -2.82872493,
         3.14159265,  2.82872493]])
allchansind = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])
icawinv    = array([[-1.24470228],
       [-0.21537367],
       [-1.83984471],
       [-1.55296582],
       [-0.73525021],
       [...739181],
       [ 0.54147206],
       [ 0.71285834],
       [ 0.06183836],
       [ 0.04424634],
       [ 0.28253896]])
intchans   = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29])
plotchans  = array([ 1,  3,  4,  5,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], dtype=uint8)
x          = array([[ 5.06688889e-01,             nan,  2.64179440e-01,
         2.53377778e-01,  2.64299965e-01,             nan,
...-3.79944444e-01,
        -3.89180942e-01, -4.23318142e-01, -4.89988667e-01,
        -5.06688889e-01, -4.89988667e-01]])
y          = array([[-0.00000000e+00,             nan, -2.21256761e-01,
        -0.00000000e+00,  2.20965560e-01,             nan,
... 4.65297748e-17,
         1.60893754e-01,  3.05958571e-01, -1.58507609e-01,
         6.20514926e-17,  1.58507609e-01]])

mne_icalabel/tests/eeg_features.py:328: IndexError</failure></testcase></testsuite></testsuites>